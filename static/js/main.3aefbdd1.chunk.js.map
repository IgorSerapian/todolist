{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["todo","state","element","items","onChange","e","setState","target","name","value","onSubmit","preventDefault","deleteItem","index","arr","splice","renderTodo","map","item","className","style","cursor","float","color","onClick","Fragment","this","htmlFor","type","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEqBA,E,4MACnBC,MAAQ,CACNC,QAAS,GACTC,MAAO,I,EAGTC,SAAW,SAACC,GACV,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAK9BC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAKL,SAAS,CACZJ,QAAS,GACTC,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwB,CAAED,QAAS,EAAKD,MAAMC,c,EAIvDU,WAAa,SAACC,GACV,IAAMC,EAAM,EAAKb,MAAME,MACvBW,EAAIC,OAAOF,EAAO,GAClB,EAAKP,SAAS,CACVH,MAAOW,K,EAIfE,WAAa,WACX,OAAO,EAAKf,MAAME,MAAMc,KAAI,SAACC,EAAML,GACjC,OACE,qBAAKM,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,+BACGD,EAAKhB,QACN,mBACEiB,UAAU,eACVC,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDC,QAAS,kBAAM,EAAKZ,WAAWC,iB,uDAU3C,OACE,eAAC,IAAMY,SAAP,WACE,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,wBACA,qBAAKA,UAAU,YAAf,SACE,uBAAMT,SAAUgB,KAAKhB,SAArB,UACE,sBAAKS,UAAU,aAAf,UACE,uBAAOQ,QAAQ,UAAf,8BACA,uBACEC,KAAK,OACLT,UAAU,+BACVX,KAAK,UACLJ,SAAUsB,KAAKtB,SACfK,MAAOiB,KAAKzB,MAAMC,aAGtB,wBAAQiB,UAAU,4BAAlB,oDAMLO,KAAKV,oB,GAvEoBa,aCWnBC,MATf,WACE,OACE,qBAAKX,UAAU,YAAf,SACE,cAAC,EAAD,OCKSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3aefbdd1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class todo extends Component {\r\n  state = {\r\n    element: '',\r\n    items: [],\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //console.log(this.state.element);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      element: '',\r\n      items: [...this.state.items, { element: this.state.element }],\r\n    });\r\n  };\r\n\r\n  deleteItem = (index) => {\r\n      const arr = this.state.items; \r\n      arr.splice(index, 1);\r\n      this.setState({\r\n          items: arr\r\n      })\r\n  }\r\n\r\n  renderTodo = () => {\r\n    return this.state.items.map((item, index) => {\r\n      return (\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <h4>\r\n              {item.element}\r\n              <i\r\n                className=\"fas fa-times\"\r\n                style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                onClick={() => this.deleteItem(index)}\r\n              ></i>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card my-3\">\r\n          <div className=\"card-header\">To-Do List</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"element\">Chose à faire</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"element\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.element}\r\n                />\r\n              </div>\r\n              <button className=\"btn btn-primary btn-block\">\r\n                Ajoutez une chose à faire :\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {this.renderTodo()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Todo from './Todo'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Todo />\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}